import cv2
import numpy as np

# Load images
image1 = cv2.imread('image1.jpg')
image2 = cv2.imread('image2.jpg')

# Load face detector
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

# Detect faces
gray1 = cv2.cvtColor(image1, cv2.COLOR_BGR2GRAY)
faces1 = face_cascade.detectMultiScale(gray1, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))

gray2 = cv2.cvtColor(image2, cv2.COLOR_BGR2GRAY)
faces2 = face_cascade.detectMultiScale(gray2, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))

# Ensure both images have detected faces
if len(faces1) > 0 and len(faces2) > 0:
    # Assume only one face in each image for simplicity
    (x1, y1, w1, h1) = faces1[0]
    (x2, y2, w2, h2) = faces2[0]

    # Resize face regions to be the same
    face_region1 = image1[y1:y1+h1, x1:x1+w1]
    face_region2 = cv2.resize(image2[y2:y2+h2, x2:x2+w2], (w1, h1))

    # Swap faces
    image1[y1:y1+h1, x1:x1+w1] = face_region2
    image2[y2:y2+h2, x2:x2+w2] = face_region1

    # Display result
    cv2.imshow('Image 1 with swapped face', image1)
    cv2.imshow('Image 2 with swapped face', image2)
    cv2.waitKey(0)
    cv2.destroyAllWindows()
else:
    print("No faces detected in one or both images.")
